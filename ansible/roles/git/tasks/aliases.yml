- name: create alias section
  lineinfile:
    path: '{{ansible_user_dir}}/.gitconfig'
    line: '[alias]'

- name: add aliases
  lineinfile:
    backup: yes
    path: '{{ansible_user_dir}}/.gitconfig'
    insertafter: '\[alias\]'
    regexp: '^\s*{{item.key}} = '
    line: '    {{item.key}} = {{item.value}}'
  with_dict:
    # lots stolen from https://git.wiki.kernel.org/index.php/Aliases
    # and https://gist.github.com/992097

    #diff
    diffc:    diff --color-words
    diffstat: diff --stat -r
    changes:  diff --name-status -r

    # log
    lg : "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative"
    lc : log ORIG_HEAD.. --stat --no-merges

    graphviz : "\"!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \\\"$@\\\" | sed 's/[0-9a-f][0-9a-f]*/\\\"&\\\"/g' ; echo '}'; }; f\""

    # commit
    cm:     commit -m
    ci:     commit
    amend:  commit --amend
    oops:   '"!f() { git commit --fixup ${1-HEAD}; }; f"'
    wip:    commit -m wip
    credit: commit --allow-empty --author

    # merging
    pick : cherry-pick
    mergefeature : merge --no-ff
    ff: merge --ff-only
      # for merging to the master branches
    weld: merge --no-ff
    pick: cherry-pick

    # checkout
    co : checkout
    cob : checkout -b
    revert-file : checkout HEAD --

    # gitk
    gitkconflict : "!gitk --left-right HEAD...MERGE_HEAD"
    k : "!gitk"

    # misc
    prune: '"!f(){ git branch -d ${1} && git push origin --delete ${1}; };f"'
    ctags: "!.git/hooks/ctags"
    serve : daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
    iiid: config user.email yanick.champoux@iinteractive.com
    prune-all : "!git remote | xargs -n 1 git remote prune"

    # resets
      # I think I have to thank mjd for that one
    retcon: rebase -i
    screwthis : reset --hard
    abide: 'reset --hard @{u}'
    undo : reset --hard
    clear : reset --hard HEAD

    # info
    included: branch --contains HEAD --all
    diff-ls: diff --name-only
    lsdate: "for-each-ref --sort=-committerdate --format='%(committerdate:short) %(refname:short)'"
    s : status
    whois : "\"!sh -c 'git log -i -1 --pretty=\\\"format:%an <%ae>\\n\\\" --author=\\\"$1\\\"' -\""
    whatis : show -s --pretty='tformat:%h (%s, %ad)' --date=short
    alias : "!git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'"
    archeology : blame -w -C -n
    human : name-rev --name-only --refs=refs/heads/*
    g : grep --break --heading --line-number
      # http://blogs.perl.org/users/ovid/2015/06/git-stashed.html
    stashed: "stash list --pretty=format:'%gd: %Cred%h%Creset %Cgreen[%ar]%Creset %s'"

    # remote interactions
    upstream : branch --set-upstream
    up: "\"!bash -c 'git push -u $1 `git rev-parse --abbrev-ref HEAD`' -\""
      # genehack++
    origin: config remote.origin.url
    prs: "\"!sh -c 'git config --add remote.${1}.fetch +refs/pull/*/head:refs/remotes/$1/pr/*' -\""
    patricide: "\"!f() { git push --delete `git rev-parse --abbrev-ref ${1:-HEAD}@{upstream} | tr '/' ' '`; }; f\""
    sniper: push --delete
    shove: push --force-with-lease


